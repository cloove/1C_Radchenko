
#Область CheckMemberLogin

	&НаСервере
	Процедура CheckMemberLoginНаСервере()
	ПространствоИмен = "urn:org.gs1ru.gs46.intf";
	ИмяСервиса = "GS1RU_Operations";
	ИмяПорта = "GS1RU_OperationsPort";
	ТочкаПодключения = ИмяПорта;
	ИмяПакета = "CheckMemberLogin";
	Пользователь = "4660059229997";
	Пароль = "906214335";
	
	Определение = Новый WSОпределения("http://srs.gs1ru.org/GS46_Interfaces/GS1RU_Operations?wsdl", Пользователь, Пароль);
	Прокси = Новый WSПрокси(Определение, ПространствоИмен, ИмяСервиса,ТочкаПодключения);   
	Прокси.Пользователь = Пользователь;
	Прокси.Пароль = Пароль;
	ПроксиПараметр = Прокси.ФабрикаXDTO.Пакеты.Получить(ПространствоИмен).Получить(ИмяПакета);
	CheckMemberLoginПараметры = Прокси.ФабрикаXDTO.Создать(ПроксиПараметр);
	
	CheckMemberLoginПараметры.login = Пользователь;
	CheckMemberLoginПараметры.password = Пароль;
	CheckMemberLoginПараметры.Services.Добавить("RATE&amp;GOODS");
	
	ПолученныеДанные = Прокси.CheckMemberLogin(CheckMemberLoginПараметры);
		КонецПроцедуры

&НаКлиенте
		Процедура CheckMemberLogin(Команда)
			CheckMemberLoginНаСервере();
		КонецПроцедуры

#КонецОбласти


#Область GetPartyByGLN
&НаСервере
Процедура ПолучитьДанныеПоGLNНаСервере()
	ПространствоИмен = "urn:org.gs1ru.gs46.intf";
	ИмяСервиса = "GS1RU_Operations";
	ИмяПорта = "GS1RU_OperationsPort";
	ТочкаПодключения = ИмяПорта;
	ИмяПакета = "GetPartyByGLN";
	Пользователь = "4660059229997";
	Пароль = "906214335";
	
	Определение = Новый WSОпределения("http://srs.gs1ru.org/GS46_Interfaces/GS1RU_Operations?wsdl", Пользователь, Пароль);
	Прокси = Новый WSПрокси(Определение, ПространствоИмен, ИмяСервиса,ТочкаПодключения);   
	Прокси.Пользователь = Пользователь;
	Прокси.Пароль = Пароль;
	ПроксиПараметр = Прокси.ФабрикаXDTO.Пакеты.Получить(ПространствоИмен).Получить(ИмяПакета);
	GetItemByGLNПараметры = Прокси.ФабрикаXDTO.Создать(ПроксиПараметр);
	
	GetItemByGLNПараметры.lang = "RU";
	GetItemByGLNПараметры.noCache = 1;
	GetItemByGLNПараметры.GLN.Добавить(GLN);
	
	ПолученныеДанные = Прокси.GetPartyByGLN(GetItemByGLNПараметры);
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеПоGLN(Команда)
	Если ЗначениеЗаполнено(GLN) Тогда 
		ПолучитьДанныеПоGLNНаСервере();
	Иначе
		Сообщить("Поле GLN не заполнено");
	КонецЕсли;
КонецПроцедуры
#КонецОбласти


#Область GetItemByGTIN

&НаСервере
Процедура ПолучитьДанныеПоGTINНаСервере()
	ПространствоИмен = "urn:org.gs1ru.gs46.intf";
	ИмяСервиса = "GS1RU_Operations";
	ИмяПорта = "GS1RU_OperationsPort";
	ТочкаПодключения = ИмяПорта;
	ИмяПакета = "GetItemByGTIN";
	Пользователь = "4660059229997";
	Пароль = "906214335";
	
	Определение = Новый WSОпределения("http://srs.gs1ru.org/GS46_Interfaces/GS1RU_Operations?wsdl", Пользователь, Пароль);
	Прокси = Новый WSПрокси(Определение, ПространствоИмен, ИмяСервиса,ТочкаПодключения);   
	Прокси.Пользователь = Пользователь;
	Прокси.Пароль = Пароль;
	
	ПроксиПараметр = Прокси.ФабрикаXDTO.Пакеты.Получить(ПространствоИмен).Получить(ИмяПакета);
	GetItemByGTINПараметры = Прокси.ФабрикаXDTO.Создать(ПроксиПараметр);
	GetItemByGTINПараметры.GTIN.Добавить(GTIN);
	GetItemByGTINПараметры.lang = "RU";
	GetItemByGTINПараметры.showMeta = 1;
	GetItemByGTINПараметры.noCache = 1;
	GetItemByGTINПараметры.noCascade = 1;
	
	ПолученныеДанные = Прокси.GetItemByGTIN(GetItemByGTINПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеПоGTIN(Команда)
	
	Если ЗначениеЗаполнено(GTIN) Тогда 
		ПолучитьДанныеПоGTINНаСервере();
	Иначе
		Сообщить("Поле GTIN не заполнено");
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

	&НаСервере
	Функция ПолучитьСтруктуруПараметровПодключения(иПакета = "", иОбъекта = "", ПолучитьПолнуюСтруктуру = Истина)
	Структура = Новый Структура;
	Если ПолучитьПолнуюСтруктуру Тогда 
		Структура.Вставить("ПространствоИмен", 	"urn:org.gs1ru.gs46.intf");
		Структура.Вставить("ИмяСервиса", 			"GS1RU_Operations");
		Структура.Вставить("ИмяПорта", 			"GS1RU_OperationsPort");
		Структура.Вставить("ТочкаПодключения",	"GS1RU_OperationsPort");
		Структура.Вставить("Пользователь", 		"4660059229997");
		Структура.Вставить("Пароль", 				"906214335");
		Структура.Вставить("ИмяПакета", 			иПакета );
		Структура.Вставить("ИмяОбъекта", 			иОбъекта);
	Иначе 
		Структура.Вставить("ПространствоИмен", 	"urn:org.gs1ru.gs46.intf");
	КонецЕсли;
	Возврат Структура;
КонецФункции
#Область SaveDataObjectRecord

	#Область ПолучитьXDTOПакет
	//&НаСервере
	//Функция ПолучитьXDTOПакет(URL, Пользователь, Пароль)
	//	
	//	ИмяФайлаПриемника = ПолучитьИмяВременногоФайла("xml");
	//	//Соединение = Новый HTTPСоединение("srs.gs1ru.org/GS46_Interfaces/GS1RU_Operations?xsd=1",,Пользователь, Пароль);
	//	//Соединение.Получить("/GS46_Interfaces/GS1RU_Operations?xsd=1", ИмяФайлаПриемника);
	//	//----------
	//	
	//	ПроксиСервер = Новый ИнтернетПрокси();
	//	ПроксиСервер.Пользователь = Пользователь;
	//	ПроксиСервер.Пароль = Пароль;

	//	СерверИсточник = "srs.gs1ru.org";
	//	Адрес = "/GS46_Interfaces/GS1RU_Operations?xsd=1";
	//	ИмяВходящегоФайла = ИмяФайлаПриемника;
	//	НТТР = Новый HTTPСоединение(СерверИсточник,,,, ПроксиСервер);
	//	НТТР.Получить(Адрес, ИмяВходящегоФайла);
	//	ВходящийФайл = Новый Файл(ИмяВходящегоФайла);
	//	
	//	//-----------
	//	
	//	НовоеЧтениеXML = Новый ЧтениеXML;
	//	НовоеЧтениеXML.ОткрытьФайл(ИмяФайлаПриемника);
	//	
	//	НовыйПостроительDOM = Новый ПостроительDOM;
	//	НовыйДокументDOM = НовыйПостроительDOM.Прочитать(НовоеЧтениеXML);
	//	
	//	НовыйПостроительСхемыXML = Новый ПостроительСхемXML;
	//	НоваяСхемаXML = НовыйПостроительСхемыXML.СоздатьСхемуXML(НовыйДокументDOM);
	//	
	//	НовыйНаборСхемXML = Новый НаборСхемXML;
	//	НовыйНаборСхемXML.Добавить(НоваяСхемаXML);
	//	
	//	НоваяФабрикаXDTO = Новый ФабрикаXDTO(НовыйНаборСхемXML);
	//	
	//	Возврат НоваяФабрикаXDTO;
	//КонецФункции
	#КонецОбласти
	
	&НаКлиенте
	Процедура ПолучитьНовыйGTIN(Команда)
		ПолучитьНовыйGTINНаСервере();
	КонецПроцедуры
	
	&НаСервере
	Процедура ПолучитьНовыйGTINНаСервере()
	
		СтруктураПодключения = ПолучитьСтруктуруПараметровПодключения("SaveDataObjectRecord", "SaveDataObjectRecord");
		ПространствоИмен 	= СтруктураПодключения.ПространствоИмен;
		ИмяСервиса 			= СтруктураПодключения.ИмяСервиса;
		ИмяПорта 			= СтруктураПодключения.ИмяПорта;
		ТочкаПодключения 	= СтруктураПодключения.ТочкаПодключения;
		ИмяПакета 			= СтруктураПодключения.ИмяПакета;
		ИмяОбъекта 			= СтруктураПодключения.ИмяОбъекта;
		Пользователь 		= СтруктураПодключения.Пользователь;
		Пароль 				= СтруктураПодключения.Пароль;
		
		Определение = Новый WSОпределения("http://srs.gs1ru.org/GS46_Interfaces/GS1RU_Operations?wsdl", Пользователь, Пароль);
		Прокси = Новый WSПрокси(Определение, ПространствоИмен, ИмяСервиса, ТочкаПодключения);   
		Прокси.Пользователь = Пользователь;
		Прокси.Пароль = Пароль;
		
		
		
		типdataObjectRecord = Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "dataObjectRecord");
		Параметр_DataObjectRecord = ПолучитьОбъектDataObjectRecord(Прокси);
		Параметр_change_version = false;
		Параметр_lang = "RU";
		Параметр_runAs = Пользователь;
		
		ПолученныеДанные = Прокси.SaveDataObjectRecord(Параметр_DataObjectRecord, Параметр_lang, Параметр_change_version, Параметр_runAs);
		
		//ПроксиПараметр = Прокси.ФабрикаXDTO.Пакеты.Получить(ПространствоИмен).Получить(ИмяПакета);
		//ПараметрыSaveDataObjectRecord = Прокси.ФабрикаXDTO.Создать(ПроксиПараметр);
		//ПараметрыSaveDataObjectRecord.DataObjectRecord = ПолучитьОбъектDataObjectRecord(Прокси);
		//ПараметрыSaveDataObjectRecord.change_version = true;
		//ПараметрыSaveDataObjectRecord.lang = "RU";
		//ПараметрыSaveDataObjectRecord.runAs = "";
		//ПолученныеДанные = Прокси.SaveDataObjectRecord(ПараметрыSaveDataObjectRecord);
		
	КонецПроцедуры
	
	&НаСервере
	Функция ПолучитьОбъектDataObjectRecord(Прокси)
		
		Структура = ПолучитьСтруктуруПараметровПодключения(,, Ложь);
		ПространствоИмен = Структура.ПространствоИмен;
		ТипdataObjectRecord = Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "dataObjectRecord");
		ПараметрыdataObjectRecord = Прокси.ФабрикаXDTO.Создать(ТипdataObjectRecord);
		ПараметрыdataObjectRecord.changeVersion = false;
//описание объекта данных
		ПараметрыdataObjectRecord.dataObjectDescr = "Единичная упаковка";
//уникальный идентификатор объекта данных (строка)
		ПараметрыdataObjectRecord.dataObjectId = "PACK_BASE_UNIT";
//название объекта данных
		ПараметрыdataObjectRecord.dataObjectText = "Единичная упаковка";
		//ПараметрыdataObjectRecord.externalKey1 = Неопределено;
		//ПараметрыdataObjectRecord.externalKey2 = Неопределено;
//уникальный идентификатор записи (целое число)
//		ПараметрыdataObjectRecord.idRecord = Неопределено;
//		ПараметрыdataObjectRecord.metaInfoVersionTime = Неопределено;
// уникальный числовой идентификатор вышестоящего экземпляра объекта в базе данных Каталога GS46 
//(например, для групповой упаковки это будет экземпляр объекта единичной упаковки)
//		ПараметрыdataObjectRecord.parentIdRecord = Неопределено;
//		ПараметрыdataObjectRecord.parentKey = Неопределено;
// идентификатор источника данных (если не указано – используется идентификатор GS46NEW) 
		ПараметрыdataObjectRecord.src = "GS46NEW";
//вариант данных. Символьный идентификатор, использующийся в отдельных объектах данных 
//для хранения экземпляров с совпадающими внешними ключами. 
//Например, для объекта PACK_BASE_UNIT (единичная упаковка) в каталоге может существовать два
//или более экземпляров с одинаковым GTIN: один будет принадлежать владельцу GTIN, а другие – дистрибьюторам.
//При этом у экземпляра владельца данных всегда устанавливается вариант, равный «0».
//Для иностранных GTIN вариант всегда больше 0.
		ПараметрыdataObjectRecord.variant = 0;
		
		ПараметрыdataObjectRecord.AttributeGroups = Прокси.ФабрикаXDTO.Создать(ТипdataObjectRecord.Свойства.Получить("AttributeGroups").Тип);
		Параметры_group = ПараметрыdataObjectRecord.AttributeGroups.group;
		Параметры_group.Добавить(ПолучитьПараметры_1338						(Прокси, ПространствоИмен));
		Параметры_group.Добавить(ПолучитьПараметры_0						(Прокси, ПространствоИмен));
		Параметры_group.Добавить(ПолучитьПараметры_1415						(Прокси, ПространствоИмен));
		Параметры_group.Добавить(ПолучитьПараметры_1437					(Прокси, ПространствоИмен));
		Параметры_group.Добавить(ПолучитьПараметры_1431						(Прокси, ПространствоИмен));
		Параметры_group.Добавить(ПолучитьПараметры_1467						(Прокси, ПространствоИмен));
		Параметры_group.Добавить(ПолучитьПараметры_1534						(Прокси, ПространствоИмен));
		
		
		ПараметрыdataObjectRecord.BaseAttributeValues = Прокси.ФабрикаXDTO.Создать(ТипdataObjectRecord.Свойства.Получить("BaseAttributeValues").Тип);
		Параметры_value = ПараметрыdataObjectRecord.BaseAttributeValues.value;
		Параметры_value.Добавить(ПолучитьПараметры_MANUFACTURER_CODE		(Прокси, ПространствоИмен));
		Параметры_value.Добавить(ПолучитьПараметры_DISTRIBUTOR_TYPE			(Прокси, ПространствоИмен));
		Параметры_value.Добавить(ПолучитьПараметры_PROD_CODE_TYPE			(Прокси, ПространствоИмен));
		Параметры_value.Добавить(ПолучитьПараметры_PROD_DESC				(Прокси, ПространствоИмен));
		Параметры_value.Добавить(ПолучитьПараметры_PROD_NAME				(Прокси, ПространствоИмен));
		Параметры_value.Добавить(ПолучитьПараметры_PROD_DESC_FULL			(Прокси, ПространствоИмен));
		Параметры_value.Добавить(ПолучитьПараметры_PROD_COUNT				(Прокси, ПространствоИмен));
		Параметры_value.Добавить(ПолучитьПараметры_PROD_MEASURE				(Прокси, ПространствоИмен));
		Параметры_value.Добавить(ПолучитьПараметры_PROD_COVER_TYPE_DICT		(Прокси, ПространствоИмен));
		Параметры_value.Добавить(ПолучитьПараметры_PROD_COVER_MATERIAL		(Прокси, ПространствоИмен));
		Параметры_value.Добавить(ПолучитьПараметры_PROD_GCPCL_SEG			(Прокси, ПространствоИмен));
		Параметры_value.Добавить(ПолучитьПараметры_PROD_GCPСL_FAMILY		(Прокси, ПространствоИмен));
		Параметры_value.Добавить(ПолучитьПараметры_PROD_GCPCL_CLASS			(Прокси, ПространствоИмен));
		Параметры_value.Добавить(ПолучитьПараметры_PROD_GCPСL_BRICK			(Прокси, ПространствоИмен));
		Параметры_value.Добавить(ПолучитьПараметры_PROD_HAS_CHVER			(Прокси, ПространствоИмен));
		Параметры_value.Добавить(ПолучитьПараметры_PROD_REGDATE				(Прокси, ПространствоИмен));
		Параметры_value.Добавить(ПолучитьПараметры_BRAND_OWNER_GLN			(Прокси, ПространствоИмен));
		Параметры_value.Добавить(ПолучитьПараметры_TOOL_FOR_PROD_ENCODING	(Прокси, ПространствоИмен));
		Параметры_value.Добавить(ПолучитьПараметры_PROD_COVER_PREFIX		(Прокси, ПространствоИмен));
		
		Возврат ПараметрыdataObjectRecord;
	КонецФункции
	
	#Область ЗаполнениеАттрибутов
	
	&НаСервере
	Функция ПолучитьПараметры_1338(Прокси, ПространствоИмен)
	
		Параметры_1338 = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "attributeGroupMeta"));
		Параметры_1338.description = "Информация, содержащая описание товара (TradeItemDescriptionInformation)";
		Параметры_1338.id = "1338";
		Параметры_1338.shortText = "Описание товара";
		Возврат Параметры_1338;
	
	КонецФункции // ПолучитьПараметры_1338(Прокси, ПространствоИмен)()
	
	&НаСервере
	Функция ПолучитьПараметры_0(Прокси, ПространствоИмен)
	
		Параметры_0 = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "attributeGroupMeta"));
		Параметры_0.id = "0";
		Возврат Параметры_0;
	
	КонецФункции // ПолучитьПараметры_0(Прокси, ПространствоИмен)()

	&НаСервере
	Функция ПолучитьПараметры_1415(Прокси, ПространствоИмен)
	
		Параметры_1415 = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "attributeGroupMeta"));
		Параметры_1415.description = "Мера";
		Параметры_1415.id = "1415";
		Параметры_1415.shortText = "Мера";
		Возврат Параметры_1415;
	
	КонецФункции // ПолучитьПараметры_1415(Прокси, ПространствоИмен)()
	
	&НаСервере
	Функция ПолучитьПараметры_1437(Прокси, ПространствоИмен)
	
		Параметры_1437 = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "attributeGroupMeta"));
		Параметры_1437.id = "1437";
		//Параметры_1437.shortText = "Классификатор GPC. Прочие классификаторы смотрите на вкладке Классификация";
		Возврат Параметры_1437;
	
	КонецФункции // ПолучитьПараметры_1437(Прокси, ПространствоИмен)()
	
	&НаСервере
	Функция ПолучитьПараметры_1431(Прокси, ПространствоИмен)
	
		Параметры_1431 = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "attributeGroupMeta"));
		Параметры_1431.description = "Упаковка";
		Параметры_1431.id = "1431";
		Параметры_1431.shortText = "Упаковка";
		Возврат Параметры_1431;
	
	КонецФункции // ПолучитьПараметры_1431(Прокси, ПространствоИмен)()

	&НаСервере
	Функция ПолучитьПараметры_1467(Прокси, ПространствоИмен)
	
		Параметры_1467 = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "attributeGroupMeta"));
		Параметры_1467.description = "Предприятие";
		Параметры_1467.id = "1467";
		Параметры_1467.shortText = "Предприятие";
		Возврат Параметры_1467;
	
	КонецФункции // ПолучитьПараметры_1467(Прокси, ПространствоИмен)()
	
	&НаСервере
	Функция ПолучитьПараметры_1534(Прокси, ПространствоИмен)
	
		Параметры_1534 = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "attributeGroupMeta"));
		Параметры_1534.id = "1534";
		Параметры_1534.shortText = "Владелец префикса";
		Возврат Параметры_1534;
	
	КонецФункции // ПолучитьПараметры_1467(Прокси, ПространствоИмен)()

	&НаСервере
	Функция ПолучитьПараметры_MANUFACTURER_CODE(Прокси, ПространствоИмен)
	
		Параметры_MANUFACTURER_CODE = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "baseAttrValue"));
		Параметры_MANUFACTURER_CODE.baseAttrId = "MANUFACTURER_CODE";
		Параметры_MANUFACTURER_CODE.attrType = "STRING";
		Параметры_MANUFACTURER_CODE.value = "789456-12";
		Параметры_MANUFACTURER_CODE.groupId = "1338";
		Возврат Параметры_MANUFACTURER_CODE;
	
	КонецФункции // ПолучитьПараметры_MANUFACTURER_CODE(Прокси, ПространствоИмен)()
	
	&НаСервере
	Функция ПолучитьПараметры_DISTRIBUTOR_TYPE(Прокси, ПространствоИмен)
	
		Параметры_DISTRIBUTOR_TYPE = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "baseAttrValue"));
		Параметры_DISTRIBUTOR_TYPE.baseAttrId = "DISTRIBUTOR_TYPE";
		Параметры_DISTRIBUTOR_TYPE.attrType = "DICTIONARY";
		Параметры_DISTRIBUTOR_TYPE.value = "1";
		Параметры_DISTRIBUTOR_TYPE.groupId = "1338";
		Возврат Параметры_DISTRIBUTOR_TYPE;
	
	КонецФункции // ПолучитьПараметры_DISTRIBUTOR_TYPE(Прокси, ПространствоИмен)()
	
	&НаСервере
	Функция ПолучитьПараметры_PROD_DESC(Прокси, ПространствоИмен) //обязательный
	
		Параметры_PROD_DESC = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "baseAttrValue"));
		Параметры_PROD_DESC.baseAttrId = "PROD_DESC";
		Параметры_PROD_DESC.attrType = "STRING";
		Параметры_PROD_DESC.value = "Обои разноцветные";
		Параметры_PROD_DESC.groupId = "1338";
		Возврат Параметры_PROD_DESC;
	
	КонецФункции // ПолучитьПараметры_PROD_DESC(Прокси, ПространствоИмен)()
	
	&НаСервере
	Функция ПолучитьПараметры_PROD_NAME(Прокси, ПространствоИмен) //обязательный
	
		Параметры_PROD_NAME = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "baseAttrValue"));
		Параметры_PROD_NAME.baseAttrId = "PROD_NAME";
		Параметры_PROD_NAME.attrType = "STRING";
		Параметры_PROD_NAME.value = "тест123";
		Параметры_PROD_NAME.groupId = "1338";
		Возврат Параметры_PROD_NAME;
	
	КонецФункции // ПолучитьПараметры_PROD_NAME(Прокси, ПространствоИмен)()
	
	&НаСервере
	Функция ПолучитьПараметры_PROD_COVER_PREFIX(Прокси, ПространствоИмен)
	
		Параметры_PROD_COVER_PREFIX = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "baseAttrValue"));
		Параметры_PROD_COVER_PREFIX.baseAttrId = "PROD_COVER_PREFIX";
		Параметры_PROD_COVER_PREFIX.attrType = "STRING";
		Параметры_PROD_COVER_PREFIX.value = "1";
		Параметры_PROD_COVER_PREFIX.groupId = "0";
		Возврат Параметры_PROD_COVER_PREFIX;
	
	КонецФункции // ПолучитьПараметры_PROD_COVER_PREFIX(Прокси, ПространствоИмен)()
	
	&НаСервере
	Функция ПолучитьПараметры_PROD_CODE_TYPE(Прокси, ПространствоИмен)
	
		Параметры_PROD_CODE_TYPE = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "baseAttrValue"));
		Параметры_PROD_CODE_TYPE.baseAttrId = "PROD_CODE_TYPE";
		Параметры_PROD_CODE_TYPE.attrType = "DICTIONARY";
		Параметры_PROD_CODE_TYPE.value = "EAN13";
		Параметры_PROD_CODE_TYPE.groupId = "0";
		Возврат Параметры_PROD_CODE_TYPE;
	
	КонецФункции // ПолучитьПараметры_PROD_CODE_TYPE(Прокси, ПространствоИмен)()
	
	&НаСервере
	Функция ПолучитьПараметры_PROD_DESC_FULL(Прокси, ПространствоИмен)
	
		Параметры_PROD_DESC_FULL = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "baseAttrValue"));
		Параметры_PROD_DESC_FULL.baseAttrId = "PROD_DESC_FULL";
		Параметры_PROD_DESC_FULL.attrType = "STRING";
		Параметры_PROD_DESC_FULL.value = "Обои разноцветные красивые";
		Параметры_PROD_DESC_FULL.groupId = "1338";
		Возврат Параметры_PROD_DESC_FULL;
	
	КонецФункции // ПолучитьПараметры_PROD_DESC_FULL(Прокси, ПространствоИмен)()

	&НаСервере
	Функция ПолучитьПараметры_PROD_COUNT(Прокси, ПространствоИмен) //обязательный
	
		Параметры_PROD_COUNT = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "baseAttrValue"));
		Параметры_PROD_COUNT.baseAttrId = "PROD_COUNT";
		Параметры_PROD_COUNT.attrType = "FLOAT";
		Параметры_PROD_COUNT.value = "1.0";
		Параметры_PROD_COUNT.groupId = "1415";
		Возврат Параметры_PROD_COUNT;
	
	КонецФункции // ПолучитьПараметры_PROD_COUNT(Прокси, ПространствоИмен)()
	
	&НаСервере
	Функция ПолучитьПараметры_PROD_MEASURE(Прокси, ПространствоИмен) //обязательный
	
		Параметры_PROD_MEASURE = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "baseAttrValue"));
		Параметры_PROD_MEASURE.baseAttrId = "PROD_MEASURE";
		Параметры_PROD_MEASURE.attrType = "DICTIONARY";
		Параметры_PROD_MEASURE.value = "PCE";
		Параметры_PROD_MEASURE.groupId = "1415";
		Возврат Параметры_PROD_MEASURE;
	
	КонецФункции // ПолучитьПараметры_PROD_MEASURE(Прокси, ПространствоИмен)()
	
	&НаСервере
	Функция ПолучитьПараметры_PROD_COVER_TYPE_DICT(Прокси, ПространствоИмен) //обязательный
	
		Параметры_PROD_COVER_TYPE_DICT = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "baseAttrValue"));
		Параметры_PROD_COVER_TYPE_DICT.baseAttrId = "PROD_COVER_TYPE_DICT";
		Параметры_PROD_COVER_TYPE_DICT.attrType = "DICTIONARY";
		Параметры_PROD_COVER_TYPE_DICT.value = "ROL";
		Параметры_PROD_COVER_TYPE_DICT.groupId = "1431";
		Возврат Параметры_PROD_COVER_TYPE_DICT;
	
	КонецФункции // ПолучитьПараметры_PROD_COVER_TYPE_DICT(Прокси, ПространствоИмен()
	
	&НаСервере
	Функция ПолучитьПараметры_PROD_COVER_MATERIAL(Прокси, ПространствоИмен) //обязательный
	
		Параметры_PROD_COVER_MATERIAL = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "baseAttrValue"));
		Параметры_PROD_COVER_MATERIAL.baseAttrId = "PROD_COVER_MATERIAL";
		Параметры_PROD_COVER_MATERIAL.attrType = "DICTIONARY";
		Параметры_PROD_COVER_MATERIAL.value = "80";
		Параметры_PROD_COVER_MATERIAL.groupId = 1431;
		Возврат Параметры_PROD_COVER_MATERIAL;
	
	КонецФункции // ПолучитьПараметры_PROD_COVER_MATERIAL(Прокси, ПространствоИмен)()
	
	&НаСервере
	Функция ПолучитьПараметры_PROD_GCPCL_SEG(Прокси, ПространствоИмен)
	
		Параметры_PROD_GCPCL_SEG = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "baseAttrValue"));
		Параметры_PROD_GCPCL_SEG.baseAttrId = "PROD_GCPCL_SEG";
		Параметры_PROD_GCPCL_SEG.attrType = "DICTIONARY";
		Параметры_PROD_GCPCL_SEG.groupId = "1437";
		Параметры_PROD_GCPCL_SEG.value = "GPCCLSEG_83000000";
		Возврат Параметры_PROD_GCPCL_SEG;
	
	КонецФункции // ПолучитьПараметры_PROD_GCPCL_SEG(Прокси, ПространствоИмен)()
	
	&НаСервере
	Функция ПолучитьПараметры_PROD_GCPСL_FAMILY(Прокси, ПространствоИмен)
	
		Параметры_PROD_GCPСL_FAMILY = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "baseAttrValue"));
		Параметры_PROD_GCPСL_FAMILY.baseAttrId = "PROD_GCPСL_FAMILY";
		Параметры_PROD_GCPСL_FAMILY.attrType = "SUBDICTIONARY";
		Параметры_PROD_GCPСL_FAMILY.groupId = "1437";
		Параметры_PROD_GCPСL_FAMILY.value = "GPCCLFAM_83010000";
		Возврат Параметры_PROD_GCPСL_FAMILY;
	
	КонецФункции // ПолучитьПараметры_PROD_GCPСL_FAMILY(Прокси, ПространствоИмен)()
	
	&НаСервере
	Функция ПолучитьПараметры_PROD_GCPCL_CLASS(Прокси, ПространствоИмен)
	
		Параметры_PROD_GCPCL_CLASS = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "baseAttrValue"));
		Параметры_PROD_GCPCL_CLASS.baseAttrId = "PROD_GCPCL_CLASS";
		Параметры_PROD_GCPCL_CLASS.attrType = "SUBDICTIONARY";
		Параметры_PROD_GCPCL_CLASS.groupId = "1437";
		Параметры_PROD_GCPCL_CLASS.value = "GPCCLCLS_83010100";
		Возврат Параметры_PROD_GCPCL_CLASS;
	
	КонецФункции // ПолучитьПараметры_PROD_GCPCL_CLASS(Прокси, ПространствоИмен)()
	
	&НаСервере
	Функция ПолучитьПараметры_PROD_GCPСL_BRICK(Прокси, ПространствоИмен)
	
		Параметры_PROD_GCPСL_BRICK = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "baseAttrValue"));
		Параметры_PROD_GCPСL_BRICK.baseAttrId = "PROD_GCPСL_BRICK";
		Параметры_PROD_GCPСL_BRICK.attrType = "SUBDICTIONARY";
		Параметры_PROD_GCPСL_BRICK.groupId = "1437";
		Параметры_PROD_GCPСL_BRICK.value = "GPCCLBRK_10002429";
		Возврат Параметры_PROD_GCPСL_BRICK;
	
	КонецФункции // ПолучитьПараметры_PROD_GCPСL_BRICK(Прокси, ПространствоИмен)()

	&НаСервере
	Функция ПолучитьПараметры_PROD_HAS_CHVER(Прокси, ПространствоИмен)
	
		Параметры_PROD_HAS_CHVER = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "baseAttrValue"));
		Параметры_PROD_HAS_CHVER.baseAttrId = "PROD_HAS_CHVER";
		Параметры_PROD_HAS_CHVER.attrType = "BOOLEAN";
		Параметры_PROD_HAS_CHVER.value = false;
		Параметры_PROD_HAS_CHVER.groupId = "0";
		Возврат Параметры_PROD_HAS_CHVER;
	
	КонецФункции // ПолучитьПараметры_PROD_HAS_CHVER(Прокси, ПространствоИмен)()
	
	&НаСервере
	Функция ПолучитьПараметры_PROD_REGDATE(Прокси, ПространствоИмен)
	
		Параметры_PROD_REGDATE = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "baseAttrValue"));
		Параметры_PROD_REGDATE.baseAttrId = "PROD_REGDATE";
		Параметры_PROD_REGDATE.attrType = "DATE";
		Параметры_PROD_REGDATE.value = ТекущаяДата();
		Параметры_PROD_REGDATE.groupId = "0";
		Возврат Параметры_PROD_REGDATE;
	
	КонецФункции // ПолучитьПараметры_PROD_REGDATE()
	
	&НаСервере
	Функция ПолучитьПараметры_BRAND_OWNER_GLN(Прокси, ПространствоИмен)
	
		Параметры_BRAND_OWNER_GLN = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "baseAttrValue"));
		Параметры_BRAND_OWNER_GLN.baseAttrId = "BRAND_OWNER_GLN";
		Параметры_BRAND_OWNER_GLN.attrType = "STRING";
		Параметры_BRAND_OWNER_GLN.value = Прокси.Пользователь;
		Параметры_BRAND_OWNER_GLN.groupId = "1467";
		Возврат Параметры_BRAND_OWNER_GLN;
	
	КонецФункции // ПолучитьПараметры_BRAND_OWNER_GLN()
	
	&НаСервере
	Функция ПолучитьПараметры_TOOL_FOR_PROD_ENCODING(Прокси, ПространствоИмен)
		
		Параметры_TOOL_FOR_PROD_ENCODING = Прокси.ФабрикаXDTO.Создать(Прокси.ФабрикаXDTO.Тип(ПространствоИмен, "baseAttrValue"));
		Параметры_TOOL_FOR_PROD_ENCODING.baseAttrId = "TOOL_FOR_PROD_ENCODING";
		Параметры_TOOL_FOR_PROD_ENCODING.attrType = "DICTIONARY";
		Параметры_TOOL_FOR_PROD_ENCODING.value = "PORTAL";
		Параметры_TOOL_FOR_PROD_ENCODING.groupId = "0";
		Возврат Параметры_TOOL_FOR_PROD_ENCODING;
		
		КонецФункции // ПолучитьПараметры_TOOL_FOR_PROD_ENCODING()
	#КонецОбласти
#КонецОбласти